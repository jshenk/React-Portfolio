{"version":3,"sources":["logo.svg","PortfolioCard.js","Menu.js","Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PortfolioCard","props","className","src","image","alt","title","summary","Menu","logo","href","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,sLCuB5BC,MArBf,SAAuBC,GACrB,OACE,yBAAKC,UAAU,8CACb,yBAAKC,IAAKF,EAAMG,MAAOC,IAAI,SAC3B,yBAAKH,UAAU,OACX,yBAAKA,UAAU,0BAA0BD,EAAMK,OAC/C,uBAAGJ,UAAU,2BACVD,EAAMM,UAGX,yBAAKL,UAAU,OACb,0BACEA,UAAU,4FADZ,gBAEA,0BACEA,UAAU,4FADZ,WAEA,0BACEA,UAAU,uFADZ,c,gBCOKM,MArBf,WACE,OACE,yBAAKN,UAAW,qEACd,yBAAKC,IAAKM,IAAMJ,IAAK,SACrB,wBAAIH,UAAU,QACZ,wBAAIA,UAAU,QACZ,uBAAGA,UAAU,oCAAoCQ,KAAK,KAAtD,WAEF,wBAAIR,UAAU,QACZ,uBAAGA,UAAU,oCAAoCQ,KAAK,KAAtD,SAEF,wBAAIR,UAAU,QACZ,uBAAGA,UAAU,oCAAoCQ,KAAK,KAAtD,SAEF,wBAAIR,UAAU,QACZ,uBAAGA,UAAU,mCAAmCQ,KAAK,KAArD,gBCFKC,MAZf,WACE,OACE,yBAAKT,UAAW,4BACd,yBAAKA,UAAW,cAAhB,IAA+B,yBAAKC,IAAK,4BAA6BE,IAAK,SAA3E,KACA,yBAAKH,UAAW,sEACd,wBAAIA,UAAW,2BAAf,kBACA,kOAEF,yBAAKA,UAAW,gBAAhB,IAAiC,yBAAKC,IAAK,4BAA6BE,IAAK,YCkBpEO,MAvBf,WACE,OACE,yBAAKV,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAW,2DACd,kBAAC,EAAD,CAAeE,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,wMACvF,kBAAC,EAAD,CAAeH,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,wMACvF,kBAAC,EAAD,CAAeH,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,wMACvF,kBAAC,EAAD,CAAeH,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,wMACvF,kBAAC,EAAD,CAAeH,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,wMACvF,kBAAC,EAAD,CAAeH,MAAO,gCAAiCE,MAAO,eAAgBC,QAAS,yMAEzF,4BAAQL,UAAW,eACjB,yBAAKA,UAAW,2CAAhB,iDCTYW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.16fd9527.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9e935a20.svg\";","import React from 'react';\n\nfunction PortfolioCard(props) {\n  return (\n    <div className=\"max-w-sm rounded overflow-hidden shadow-lg\">\n      <img src={props.image} alt=\"test\" />\n      <div className=\"p-6\">\n          <div className=\"font-bold text-xl mb-2\">{props.title}</div>\n          <p className=\"text-gray-700 text-base\">\n            {props.summary}\n          </p>\n        </div>\n        <div className=\"p-6\">\n          <span\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#photography</span>\n          <span\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2\">#travel</span>\n          <span\n            className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700\">#winter</span>\n        </div>\n    </div>\n  );\n}\nexport default PortfolioCard;\n","import React from 'react';\nimport logo from \"./logo.svg\";\n\nfunction Menu() {\n  return  (\n    <div className={\"topbar flex justify-between w-full items-center container mx-auto\"}>\n      <img src={logo} alt={\"logo\"} />\n      <ul className=\"flex\">\n        <li className=\"mr-6\">\n          <a className=\"text-blue-500 hover:text-blue-800\" href=\"#\">Active</a>\n        </li>\n        <li className=\"mr-6\">\n          <a className=\"text-blue-500 hover:text-blue-800\" href=\"#\">Link</a>\n        </li>\n        <li className=\"mr-6\">\n          <a className=\"text-blue-500 hover:text-blue-800\" href=\"#\">Link</a>\n        </li>\n        <li className=\"mr-6\">\n          <a className=\"text-gray-400 cursor-not-allowed\" href=\"#\">Disabled</a>\n        </li>\n      </ul>\n    </div>\n  );\n}\nexport default Menu;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport logo from './logo.svg';\n\nfunction Header() {\n  return (\n    <div className={\"header flex items-center\"}>\n      <div className={\"square-one\"}> <img src={\"https://picsum.photos/700\"} alt={\"test\"}/> </div>\n      <div className={\"square-two max-w-md p-10 bg-white -ml-10 -mr-10 relative text-left\"}>\n        <h1 className={\"text-4xl font-bold mb-2\"}>Hi! I'm Jenna!</h1>\n        <p>Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt </p>\n      </div>\n      <div className={\"square-three\"}> <img src={\"https://picsum.photos/400\"} alt={\"test\"}/></div>\n    </div>\n  );\n}\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport './tailwind.generated.css';\nimport PortfolioCard from \"./PortfolioCard\";\nimport Header from \"./Header\";\nimport Menu from \"./Menu\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Header />\n      <div className={\"grid grid-cols-3 gap-4 mb-4 container mx-auto px-4 my-8\"}>\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n        <PortfolioCard image={\"https://picsum.photos/400/150\"} title={\"Example Item\"} summary={\"Lorem ipsum dolor sit amet, praesent eu dolor, molestie id, dictum mi sollicitudin magna sed ac turpis. Ac mi. Feugiat elit non eros felis at. Nunc at felis maecenas est lorem, aptent tincidunt .\"} />\n      </div>\n      <footer className={\"bg-teal-800\"}>\n        <div className={\"container mx-auto text-center py-6 px-4\"}>\n          Copyright @ 2020 | @jshenk | Baltimore, MD\n        </div>\n\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}